#CFLAGS=-g -O2 -Wall -Wextra -Isrc -rdynamic -DNDEBUG $(OPTFLAGS)
CC = gcc
CFLAGS=-g -Wall -std=gnu99 -Isrc -DNDEBUG $(OPTFLAGS)
LIBS=-ldl $(OPTLIBS)
PREFIX?=/usr/local

SOURCES=$(wildcard src/**/*.c src/*.c)
OBJECTS=$(patsubst %.c,%.o,$(SOURCES))

TEST_SRC=$(wildcard tests/*_tests.c)
TESTS=$(patsubst %.c,%,$(TEST_SRC))

TARGET=build/libYOUR_LIBRARY.a
SO_TARGET=$(patsubst %.a,%.so,$(TARGET))

# The Target Build
all: $(TARGET) $(SO_TARGET) tests

dev: CFLAGS=-g -Wall -Isrc -Wall -ldl -Wextra $(OPTFLAGS)
dev: all

#Build archive library.
$(TARGET): CFLAGS += -fPIC
$(TARGET): build $(OBJECTS)
	@echo  "Beginning building $(TARGET)"
	ar rcs $@ $(OBJECTS)
	ranlib $@
	@echo  "End building $(TARGET)"

#Build shared library.
$(SO_TARGET): $(TARGET) $(OBJECTS)
	@echo  "Start building $(SO_TARGET)"
	$(CC) -shared -o $@ $(OBJECTS) $(LIBS)
	@echo  "End building $(SO_TARGET)"

#Create directories if these don't exist.
build:
	@mkdir -p build
	@mkdir -p bin

# The Unit Tests
.PHONY: tests
#tests: CFLAGS += $(SO_TARGET) $(LIBS)
tests: 
	@echo "start compiling for tests"
	$(CC) -Wall -g -DNDEBUG $(TEST_SRC) -ldl -o $(TESTS)
	./tests/libex29_tests

#tests: $(TESTS)
#@echo "Start running tests."
#sh ./tests/runtests.sh
#@echo "End running tests."

# The Cleaner
clean:
	rm -rf build $(OBJECTS) $(TESTS)
	rm -f tests/tests.log 
	find . -name "*.gc*" -exec rm {} \;
	rm -rf `find . -name "*.dSYM" -print`

# The Install
install: all
	install -d $(DESTDIR)/$(PREFIX)/lib/
	install $(TARGET) $(DESTDIR)/$(PREFIX)/lib/

# The Checker
check:
	@echo Files with potentially dangerous functions.
	@egrep '[^_.>a-zA-Z0-9](str(n?cpy|n?cat|xfrm|n?dup|str|pbrk|tok|_)\
		|stpn?cpy|a?sn?printf|byte_)' $(SOURCES) || true

help:
	@echo "SOURCES: $(SOURCES)"
	@echo "OBJECTS: $(OBJECTS)"
	@echo "TEST_SRC: $(TEST_SRC)"
	@echo "TESTS: $(TESTS)"
	@echo "TARGET: $(TARGET)"
	@echo "SO_TARGET: $(SO_TARGET)"
